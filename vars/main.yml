---
rhel7stig_min_ansible_version: 2.10.0

rhel7stig_dconf_available: "{{ rhel7stig_gui or rhel7stig_dconf_audit.rc == 0 or
       rhel7stig_always_configure_dconf }}"
rhel7stig_has_dconf_command: "{{ rhel7stig_gui or rhel7stig_dconf_audit.rc == 0 }}"

rhel7stig_service_started: "{{ rhel7stig_system_is_chroot | ternary(omit, 'started') }}"
rhel7stig_systemd_daemon_reload: "{{ not rhel7stig_system_is_chroot }}"
rhel7stig_sysctl_reload: "{{ not rhel7stig_system_is_container }}"
ol7stig_sysctl_reload: "{{ not rhel7stig_system_is_container }}"

# these variables are for enabling tasks to run that will be further controled
# by check_mode to prevent the remediation task from making changes as
# requested
rhel7stig_complex: "{{ rhel7stig_complexity_high or rhel7stig_audit_complex }}"
rhel7stig_disruptive: "{{ rhel7stig_disruption_high or rhel7stig_audit_disruptive }}"

# These vars are made to go in the check_mode property of a task that is
# complex or disruptive, respectively.
rhel7stig_complex_check_mode: "{{ ansible_check_mode or rhel7stig_audit_complex and not rhel7stig_complexity_high }}"
rhel7stig_disruptive_check_mode: "{{ ansible_check_mode or rhel7stig_audit_disruptive and not rhel7stig_disruption_high }}"

# this allows us to insert a name=value into a line of the format:
# key="name1=value1 name2=value2 nameN=valueN"
rhel7stig_regexp_quoted_params: ^({{ rhel7stig_re_qp_key }})({{ rhel7stig_re_qp_other_params }})({{
        rhel7stig_re_qp_param }}?)({{ rhel7stig_re_qp_other_params }})({{ rhel7stig_re_qp_key_end }})
rhel7stig_replace_quoted_params: \1\2{{ rhel7stig_re_qp_insert | ternary('', ' ') }}{{ param }}={{
        value }}{{ rhel7stig_re_qp_insert | ternary(' ', '') }}\4\5

# none of these regexes create capture groups
rhel7stig_re_qp_key: (?:\s*{{ key }}=")
rhel7stig_re_qp_param: (?:{{ rhel7stig_re_qp_insert | ternary('', ' ?') }}{{
        rhel7stig_re_qp_param_start }}{{ param }}=.*?{{
        rhel7stig_re_qp_param_end }}{{ rhel7stig_re_qp_insert | ternary(' ?', '') }})
rhel7stig_re_qp_other_params: (?:(?!{{ rhel7stig_re_qp_param }}.*).)*{{
        rhel7stig_re_qp_insert | ternary('?', '') }}
rhel7stig_re_qp_param_start: (?<=[" ])
rhel7stig_re_qp_param_end: (?=[" ])
rhel7stig_re_qp_key_end: (?:" *)

# insert the parameter at the beginning or append to the end, default append
rhel7stig_re_qp_insert: "{{ insert | default(not (append | default(true))) }}"
